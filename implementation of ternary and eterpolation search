

int ternarySearch(int arr[], int left, int right, int target) {
    if (right >= left) {
        int mid1 = left + (right - left) / 3;
        int mid2 = right - (right - left) / 3;

        if (arr[mid1] == target)
            return mid1;
        if (arr[mid2] == target)
            return mid2;

        if (target < arr[mid1])
            return ternarySearch(arr, left, mid1 - 1, target);
        else if (target > arr[mid2])
            return ternarySearch(arr, mid2 + 1, right, target);
        else
            return ternarySearch(arr, mid1 + 1, mid2 - 1, target);
    }

}
int interpolationSearch(int arr[], int size, int target) {
    int low = 0, high = size - 1;

    while (low <= high && target >= arr[low] && target <= arr[high]) {
        if (low == high) {
            if (arr[low] == target) return low;
            return -1;
        }

        int pos = low + ((double)(target - arr[low]) * (high - low) / (arr[high] - arr[low]));

        if (arr[pos] == target)
            return pos;
        if (arr[pos] < target)
            low = pos + 1;
        else
            high = pos - 1;
    }

    return -1;
}
