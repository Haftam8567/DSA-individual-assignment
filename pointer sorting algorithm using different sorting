#include<iostream>
using namespace std;
void insertionSort(int arr[], int size) {
for (int i = 1; i<size; i++) {

       int key =arr[i]; // current element to be inserted 
       int j= i-1;
        // shift elements greater than key to the right
       while (j>=0 && arr[j]>key) {arr[j+1]= arr[j];
        j--;
                   }
    arr[j+1]=key; // Insert key in the correct position
}
}

void printArray( int arr[], int size ) {
    for (int i =0; i<size; i++)
    cout<<arr[i]<<" ";
    cout<<endl;

}

void printarray( int arr[],int size) {
    for( int i=size-1; i>=0; i--)
    cout<<arr[i]<<" ";
    cout<<endl;
}

int main()
{

int numbers[] = {12, 11, 13, 17, 6,7};
int size = sizeof(numbers)/sizeof(numbers[0]);
cout<<"================================================"<<endl;
cout<<"Original Array: ";
printArray(numbers, size);
insertionSort(numbers, size);
cout<<"Sorted Array (ascending order): ";

printArray(numbers, size);
cout<<"Sorted Array (descending order): ";
printarray(numbers, size);
cout<<"===============Keep Coding===================";
}
void selectionSort(int arr[], int size) {
    for (int i = 0; i < size-1; i++) {
        // Find the minimum element in unsorted array
        int minIndex = i;
        for (int j = i+1; j < size; j++) {
            if (arr[j] < arr[minIndex]) {
                minIndex = j;
            }
        }
        // Swap the found minimum element with the first element
        int temp = arr[minIndex];
        arr[minIndex] = arr[i];
        arr[i] = temp;
    }
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++)
        cout << arr[i] << " ";
    cout << endl;
}

void printReverseArray(int arr[], int size) {
    for (int i = size-1; i >= 0; i--)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int numbers[] = {12, 11, 13, 17, 6, 7};
    int size = sizeof(numbers)/sizeof(numbers[0]);
    
    cout << "================================================" << endl;
    cout << "Original Array: ";
    printArray(numbers, size);
    
    selectionSort(numbers, size);
    
    cout << "Sorted Array (ascending order): ";
    printArray(numbers, size);
    
    cout << "Sorted Array (descending order): ";
    printReverseArray(numbers, size);
    
    cout << "===============Keep Coding===================";
}

void bubbleSort(int arr[], int size) {
    for (int i = 0; i < size-1; i++) {
        for (int j = 0; j < size-i-1; j++) {
            if (arr[j] > arr[j+1]) {
                // Swap elements
                int temp = arr[j];
                arr[j] = arr[j+1];
                arr[j+1] = temp;
            }
        }
    }
}

void printArray(int arr[], int size) {
    for (int i = 0; i < size; i++)
        cout << arr[i] << " ";
    cout << endl;
}

void printReverseArray(int arr[], int size) {
    for (int i = size-1; i >= 0; i--)
        cout << arr[i] << " ";
    cout << endl;
}

int main() {
    int numbers[] = {12, 11, 13, 17, 6, 7};
    int size = sizeof(numbers)/sizeof(numbers[0]);
    
    cout << "================================================" << endl;
    cout << "Original Array: ";
    printArray(numbers, size);
    
    bubbleSort(numbers, size);
    
    cout << "Sorted Array (ascending order): ";
    printArray(numbers, size);
    
    cout << "Sorted Array (descending order): ";
    printReverseArray(numbers, size);
    
    cout << "===============Keep Coding===================";
    return 0;
}
